package gnubg

type float_vector [4]float32

var inpvec [16]float_vector = [16]float_vector{
	/*  0 */ {0.0, 0.0, 0.0, 0.0},
	/*  1 */ {1.0, 0.0, 0.0, 0.0},
	/*  2 */ {0.0, 1.0, 0.0, 0.0},
	/*  3 */ {0.0, 0.0, 1.0, 0.0},
	/*  4 */ {0.0, 0.0, 1.0, 0.5},
	/*  5 */ {0.0, 0.0, 1.0, 1.0},
	/*  6 */ {0.0, 0.0, 1.0, 1.5},
	/*  7 */ {0.0, 0.0, 1.0, 2.0},
	/*  8 */ {0.0, 0.0, 1.0, 2.5},
	/*  9 */ {0.0, 0.0, 1.0, 3.0},
	/* 10 */ {0.0, 0.0, 1.0, 3.5},
	/* 11 */ {0.0, 0.0, 1.0, 4.0},
	/* 12 */ {0.0, 0.0, 1.0, 4.5},
	/* 13 */ {0.0, 0.0, 1.0, 5.0},
	/* 14 */ {0.0, 0.0, 1.0, 5.5},
	/* 15 */ {0.0, 0.0, 1.0, 6.0}}

var inpvecb [16]float_vector = [16]float_vector{
	/*  0 */ {0.0, 0.0, 0.0, 0.0},
	/*  1 */ {1.0, 0.0, 0.0, 0.0},
	/*  2 */ {1.0, 1.0, 0.0, 0.0},
	/*  3 */ {1.0, 1.0, 1.0, 0.0},
	/*  4 */ {1.0, 1.0, 1.0, 0.5},
	/*  5 */ {1.0, 1.0, 1.0, 1.0},
	/*  6 */ {1.0, 1.0, 1.0, 1.5},
	/*  7 */ {1.0, 1.0, 1.0, 2.0},
	/*  8 */ {1.0, 1.0, 1.0, 2.5},
	/*  9 */ {1.0, 1.0, 1.0, 3.0},
	/* 10 */ {1.0, 1.0, 1.0, 3.5},
	/* 11 */ {1.0, 1.0, 1.0, 4.0},
	/* 12 */ {1.0, 1.0, 1.0, 4.5},
	/* 13 */ {1.0, 1.0, 1.0, 5.0},
	/* 14 */ {1.0, 1.0, 1.0, 5.5},
	/* 15 */ {1.0, 1.0, 1.0, 6.0}}

func baseInputs(anBoard _TanBoard, arInput []float32) {
	for j := 0; j < 2; j++ {
		afInput := arInput[j*25*4:]
		board := &anBoard[j]

		/* Points */
		for i := 0; i < 24; i++ {
			var nc int = board[i]

			afInput[i*4+0] = inpvec[nc][0]
			afInput[i*4+1] = inpvec[nc][1]
			afInput[i*4+2] = inpvec[nc][2]
			afInput[i*4+3] = inpvec[nc][3]
		}

		/* Bar */
		{
			var nc int = board[24]

			afInput[24*4+0] = inpvecb[nc][0]
			afInput[24*4+1] = inpvecb[nc][1]
			afInput[24*4+2] = inpvecb[nc][2]
			afInput[24*4+3] = inpvecb[nc][3]
		}
	}
}
